{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP2\\\\FYP\\\\src\\\\ToggleSwitch.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useThemeContext } from './themeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Switch = styled.div`\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    position: absolute;\n    bottom: 1rem;\n    right: 1rem;\n    width: ${({\n  theme\n}) => theme.switchWidth};\n    height: ${({\n  theme\n}) => theme.switchHeight};\n    border-radius: 50em;\n    padding: ${({\n  theme\n}) => theme.switchPadding} 0;\n    .switch__input, .switch__label {\n        position: absolute;\n        left: 0;\n        top: 0;\n    }\n    .switch__input {\n        margin: 0;\n        padding: 0;\n        opacity: 0;\n        height: 0;\n        width: 0;\n        pointer-events: none;\n        &:checked + .switch__label {\n            background-color: ${({\n  theme\n}) => theme.colorWhite};\n        }\n        &:checked + .switch__label + .switch__marker {\n            left: calc(100% - ${({\n  theme\n}) => theme.switchHeight} + ${({\n  theme\n}) => theme.switchPadding});\n        }\n        &:focus + .switch__label,\n        &:active + .switch__label {\n            box-shadow: 0 0 0 3px alpha(${({\n  theme\n}) => theme.primary}, 0.2);\n        }\n    }\n    .switch__label {\n        width: 100%;\n        height: 100%;\n        color: transparent;\n        user-select: none;\n        background-color: ${({\n  theme\n}) => theme.textColor};\n        border-radius: inherit;\n        z-index: 1;\n        transition: background ${({\n  theme\n}) => theme.switchAnimationDuration};\n    }\n    .switch__marker {\n        position: relative;\n        background-color: ${({\n  theme\n}) => theme.primary};\n        width: calc(${({\n  theme\n}) => theme.switchHeight} - ${({\n  theme\n}) => theme.switchPadding} * 2);\n        height: calc(${({\n  theme\n}) => theme.switchHeight} - ${({\n  theme\n}) => theme.switchPadding} * 2);\n        border-radius: 50%;\n        z-index: 2;\n        pointer-events: none;\n        box-shadow: 0 1px 1px hsla(0, 0%, 0%, 0.25);\n        left: ${({\n  theme\n}) => theme.switchPadding};\n        transition: left ${({\n  theme\n}) => theme.switchAnimationDuration};\n        will-change: left;\n    }\n`;\n_c = Switch;\n\nconst ToggleSwitch = () => {\n  _s();\n\n  const {\n    toggleTheme\n  } = useThemeContext();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"switch__input\",\n        type: \"checkbox\",\n        id: \"switchCheckbox1\",\n        onClick: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        \"aria-hidden\": \"true\",\n        className: \"switch__label\",\n        htmlFor: \"switchCheckbox1\",\n        children: \"On\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        \"aria-hidden\": \"true\",\n        className: \"switch__marker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ToggleSwitch, \"oh9fXONKj9lzWgao8InJ/HrvCpk=\", false, function () {\n  return [useThemeContext];\n});\n\n_c2 = ToggleSwitch;\nexport default ToggleSwitch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Switch\");\n$RefreshReg$(_c2, \"ToggleSwitch\");","map":{"version":3,"sources":["D:/FYP2/FYP/src/ToggleSwitch.jsx"],"names":["React","styled","useThemeContext","Switch","div","theme","switchWidth","switchHeight","switchPadding","colorWhite","primary","textColor","switchAnimationDuration","ToggleSwitch","toggleTheme"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gBAAhC;;;AAGA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,WAAY;AAC9C,cAAc,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa;AAChD;AACA,eAAe,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,UAAW;AAChE;AACA;AACA,gCAAgC,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa,MAAK,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;AAC1G;AACA;AACA;AACA,0CAA0C,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,OAAQ;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACM,SAAU;AAC3D;AACA;AACA,iCAAiC,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,uBAAwB;AAC9E;AACA;AACA;AACA,4BAA4B,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,OAAQ;AACzD,sBAAsB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa,MAAK,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;AAChG,uBAAuB,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa,MAAK,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;AACjG;AACA;AACA;AACA;AACA,gBAAgB,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,aAAc;AACnD,2BAA2B,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,uBAAwB;AACxE;AACA;AACA,CAzDA;KAAMT,M;;AA2DN,MAAMU,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAkBZ,eAAe,EAAvC;AAGA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAiC,QAAA,IAAI,EAAC,UAAtC;AAAiD,QAAA,EAAE,EAAC,iBAApD;AAAsE,QAAA,OAAO,EAAEY;AAA/E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,uBAAY,MAAnB;AAA0B,QAAA,SAAS,EAAC,eAApC;AAAoD,QAAA,OAAO,EAAC,iBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,uBAAY,MAAjB;AAAwB,QAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH,CAbD;;GAAMD,Y;UACsBX,e;;;MADtBW,Y;AAeN,eAAeA,YAAf","sourcesContent":["  \r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useThemeContext } from './themeContext'\r\n\r\n\r\nconst Switch = styled.div`\r\n    display: flex;\r\n    flex-shrink: 0;\r\n    align-items: center;\r\n    position: absolute;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    width: ${({ theme }) => theme.switchWidth};\r\n    height: ${({ theme }) => theme.switchHeight};\r\n    border-radius: 50em;\r\n    padding: ${({ theme }) => theme.switchPadding} 0;\r\n    .switch__input, .switch__label {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n    .switch__input {\r\n        margin: 0;\r\n        padding: 0;\r\n        opacity: 0;\r\n        height: 0;\r\n        width: 0;\r\n        pointer-events: none;\r\n        &:checked + .switch__label {\r\n            background-color: ${({ theme }) => theme.colorWhite};\r\n        }\r\n        &:checked + .switch__label + .switch__marker {\r\n            left: calc(100% - ${({ theme }) => theme.switchHeight} + ${({ theme }) => theme.switchPadding});\r\n        }\r\n        &:focus + .switch__label,\r\n        &:active + .switch__label {\r\n            box-shadow: 0 0 0 3px alpha(${({ theme }) => theme.primary}, 0.2);\r\n        }\r\n    }\r\n    .switch__label {\r\n        width: 100%;\r\n        height: 100%;\r\n        color: transparent;\r\n        user-select: none;\r\n        background-color: ${({ theme }) => theme.textColor};\r\n        border-radius: inherit;\r\n        z-index: 1;\r\n        transition: background ${({ theme }) => theme.switchAnimationDuration};\r\n    }\r\n    .switch__marker {\r\n        position: relative;\r\n        background-color: ${({ theme }) => theme.primary};\r\n        width: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\r\n        height: calc(${({ theme }) => theme.switchHeight} - ${({ theme }) => theme.switchPadding} * 2);\r\n        border-radius: 50%;\r\n        z-index: 2;\r\n        pointer-events: none;\r\n        box-shadow: 0 1px 1px hsla(0, 0%, 0%, 0.25);\r\n        left: ${({ theme }) => theme.switchPadding};\r\n        transition: left ${({ theme }) => theme.switchAnimationDuration};\r\n        will-change: left;\r\n    }\r\n`\r\n\r\nconst ToggleSwitch = () => {\r\n    const { toggleTheme } = useThemeContext()\r\n\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <input className=\"switch__input\" type=\"checkbox\" id=\"switchCheckbox1\" onClick={toggleTheme} />\r\n                <label aria-hidden=\"true\" className=\"switch__label\" htmlFor=\"switchCheckbox1\">On</label>\r\n                <div aria-hidden=\"true\" className=\"switch__marker\"></div>\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch"]},"metadata":{},"sourceType":"module"}